/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable
// @generated from protobuf file "detection.proto" (package "detection", syntax proto3)
// tslint:disable
import type { RpcTransport } from '@protobuf-ts/runtime-rpc';
import type { ServiceInfo } from '@protobuf-ts/runtime-rpc';
import { stackIntercept } from '@protobuf-ts/runtime-rpc';
import type { UnaryCall } from '@protobuf-ts/runtime-rpc';
import type { RpcOptions } from '@protobuf-ts/runtime-rpc';

import { DetectionService } from './detection';
import type { DetectImagesResponse } from './detection';
import type { DetectImagesRequest } from './detection';

/**
 * @generated from protobuf service detection.DetectionService
 */
export interface IDetectionServiceClient {
  /**
   * @generated from protobuf rpc: DetectImages(detection.DetectImagesRequest) returns (detection.DetectImagesResponse);
   */
  detectImages(
    input: DetectImagesRequest,
    options?: RpcOptions,
  ): UnaryCall<DetectImagesRequest, DetectImagesResponse>;
}
/**
 * @generated from protobuf service detection.DetectionService
 */
export class DetectionServiceClient
  implements IDetectionServiceClient, ServiceInfo
{
  typeName = DetectionService.typeName;
  methods = DetectionService.methods;
  options = DetectionService.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * @generated from protobuf rpc: DetectImages(detection.DetectImagesRequest) returns (detection.DetectImagesResponse);
   */
  detectImages(
    input: DetectImagesRequest,
    options?: RpcOptions,
  ): UnaryCall<DetectImagesRequest, DetectImagesResponse> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<DetectImagesRequest, DetectImagesResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
}
